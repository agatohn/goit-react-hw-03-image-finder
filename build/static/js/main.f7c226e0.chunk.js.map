{"version":3,"sources":["Components/searchForm/SearchForm.js","Components/imageGallery/imageGalleryItem/ImageGalleryItem.js","Services/pixabay-api.js","Components/imageGallery/ImageGallery.js","Components/modal/Modal.js","App.js","index.js"],"names":["SearchForm","state","query","handleQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","url","alt","onClick","urlLarge","src","api","fetchImg","q","page","split","join","fetch","then","response","ok","json","Promise","reject","Error","Status","ImageGallery","imgs","status","prevProps","prevState","prevQuery","nextQuery","prevPage","nextPage","setTimeout","imgAPI","hits","catch","finally","window","scrollTo","top","document","documentElement","scrollHeight","behavior","handlePageIncr","onOpen","color","height","width","timeout","message","map","img","largeImageURL","webformatURL","tags","id","modalRoot","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","addEventListener","removeEventListener","createPortal","App","showModal","urlModal","handleFormSubmit","Number","toString","closeModal","handleImageClick","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f7c226e0.chunk.js","sourcesContent":["import { Component } from \"react\";\n// import { ImSearch } from \"react-icons/im\";\nimport { toast } from \"react-toastify\";\n\nexport default class SearchForm extends Component {\n  state = {\n    query: \"\",\n  };\n\n  handleQueryChange = (event) => {\n    this.setState({ query: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.query.trim() === \"\") {\n      toast.error(\"Введите поисковый запрос.\");\n      return;\n    }\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            value={this.state.query}\n            onChange={this.handleQueryChange}\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function ImageGalleryItem({ url, alt, onClick, urlLarge }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={() => onClick(urlLarge)}\r\n        src={url}\r\n        alt={alt}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  urlLarge: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","function fetchImg(q, page) {\n  const query = q.trim(\" \").split(\" \").join(\"+\");\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=23292771-6d1481bed529939f67189ab21&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`По запросу <<${q}>> изображений не найдено`)\n    );\n  });\n}\n\nconst api = {\n  fetchImg,\n};\n\nexport default api;\n","import { Component } from \"react\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\nimport imgAPI from \"../../Services/pixabay-api\";\r\nimport { toast } from \"react-toastify\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  PENDINGMORE: \"pendingMore\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    imgs: null,\r\n    error: null,\r\n    status: Status.IDLE,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevProps.query;\r\n    const nextQuery = this.props.query;\r\n    const prevPage = prevProps.page;\r\n    const nextPage = this.props.page;\r\n\r\n    if (prevQuery !== nextQuery) {\r\n      this.setState({ status: Status.PENDING });\r\n      setTimeout(() => {\r\n        imgAPI\r\n          .fetchImg(nextQuery)\r\n          .then(({ hits }) => {\r\n            if (hits[0]) {\r\n              return this.setState({\r\n                imgs: [...hits],\r\n                status: Status.RESOLVED,\r\n              });\r\n            }\r\n            toast.error(\"Такой картинки не существует.\");\r\n            this.setState({ status: Status.IDLE });\r\n          })\r\n          .catch((error) => this.setState({ error, status: Status.REJECTED }));\r\n      }, 1000);\r\n    }\r\n    if (prevPage !== nextPage && prevQuery === nextQuery) {\r\n      this.setState({ status: Status.PENDINGMORE });\r\n      let prevPage = [];\r\n      if (prevState.imgs) {\r\n        prevPage = [...prevState.imgs];\r\n      }\r\n      setTimeout(() => {\r\n        imgAPI\r\n          .fetchImg(prevQuery, nextPage)\r\n          .then(({ hits }) => {\r\n            return this.setState({\r\n              imgs: [...prevPage, ...hits],\r\n              status: Status.RESOLVED,\r\n            });\r\n          })\r\n          .catch((error) => this.setState({ error, status: Status.REJECTED }))\r\n          .finally(() =>\r\n            window.scrollTo({\r\n              top: document.documentElement.scrollHeight,\r\n              behavior: \"smooth\",\r\n            })\r\n          );\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { imgs, error, status } = this.state;\r\n    const { query, handlePageIncr, onOpen } = this.props;\r\n\r\n    if (status === \"idle\") {\r\n      return <div className=\"Div\">Введите поисковый запрос.</div>;\r\n    }\r\n\r\n    if (status === \"pending\") {\r\n      return (\r\n        <div className=\"Div\">\r\n          Ожидаем ответ по запросу: {query}\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height={20}\r\n            width={100}\r\n            timeout={1000}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (status === \"rejected\") {\r\n      return <div>Возникла ошибка: {error.message}</div>;\r\n    }\r\n\r\n    if (status === \"resolved\") {\r\n      return (\r\n        <>\r\n          <ul className=\"ImageGallery\">\r\n            {imgs.map((img) => (\r\n              <ImageGalleryItem\r\n                urlLarge={img.largeImageURL}\r\n                url={img.webformatURL}\r\n                alt={img.tags}\r\n                key={img.id}\r\n                onClick={onOpen}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <button onClick={handlePageIncr} className=\"Button\" type=\"button\">\r\n            Load More!\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n    if (status === \"pendingMore\") {\r\n      return (\r\n        <>\r\n          <ul className=\"ImageGallery\">\r\n            {imgs.map((img) => (\r\n              <ImageGalleryItem\r\n                url={img.webformatURL}\r\n                alt={img.tags}\r\n                key={img.id}\r\n                onClick={onOpen}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <button className=\"Loader\" type=\"button\">\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#00BFFF\"\r\n              height={20}\r\n              width={100}\r\n              timeout={1000}\r\n            />\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.string.isRequired,\r\n  onOpen: PropTypes.func.isRequired,\r\n  handlePageIncr: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.url} alt=\"modal\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport SearchForm from \"./Components/searchForm/SearchForm\";\r\nimport ImageGallery from \"./Components/imageGallery/ImageGallery\";\r\nimport Modal from \"./Components/modal/Modal\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    query: \"\",\r\n    page: \"1\",\r\n    showModal: false,\r\n    urlModal: \"\",\r\n  };\r\n\r\n  handleFormSubmit = (query) => {\r\n    this.setState({ query, page: \"1\" });\r\n  };\r\n  handlePageIncr = () => {\r\n    this.setState({ page: (Number(this.state.page) + 1).toString() });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ urlModal: \"\", showModal: false });\r\n  };\r\n\r\n  handleImageClick = (url) => {\r\n    this.setState({ urlModal: url, showModal: true });\r\n  };\r\n  //url needed\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchForm onSubmit={this.handleFormSubmit} />\r\n        {this.state.showModal && (\r\n          <Modal url={this.state.urlModal} onClose={this.closeModal} />\r\n        )}\r\n        <ImageGallery\r\n          query={this.state.query}\r\n          page={this.state.page}\r\n          onOpen={this.handleImageClick}\r\n          handlePageIncr={this.handlePageIncr}\r\n        />\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}